#!/usr/bin/env perl

use strict;
use Parallel::Runner;

my $usage = qq(
crun - Run commands in a chain and concurrently (V2015.09.03)

    by Wei Shen <shenwei356\@gmail.com> 
    http://github.com/shenwei356

USAGE:
    
    crun OPTIONS...

OPTIONS:

    -c STRING    Add a concurrent command
    -s STRING    Add a sequential command
    -n INT       Maximum concurrency (threads number) [4]
    -h           Help message
    
NOTE:

    The order of options decides the work flow! The two cases below are different:
    
    crun -s ls -s date
    crun -s date -s ls

EXAMPLE:

    crun -n 4 -s job1 -c job2 -c job3 -c job4 -s job5 -s job6

    The work flow is:

            |-> job2 |  
    job1 -> |-> job3 | -> job5 -> job6
            |-> job4 |

);

my $chain   = [];    # jobs
my $threads = 4;

while (@ARGV) {
    my $flag = shift @ARGV;

    if ( $flag eq '-h' or $flag eq '--help' or $flag eq '-help' ) {
        die $usage;
    }
    elsif ( $flag !~ /^\-/ ) {
        die "invalid option: $flag\nType \"crun -h\" for help.\n";
    }

    my $value = shift @ARGV;
    if ( not defined $value or $value =~ /^\-/ ) {
        unshift @ARGV, $value;
        next;
    }

    if ( $flag eq '-n' ) {
        $threads = $value;
    }
    elsif ( $flag eq '-c' ) {
        if ( @$chain > 0 ) {
            if ( ref $$chain[-1] eq ref [] ) {
                push @{ $$chain[-1] }, $value;
            }
            else {
                push @$chain, [$value];
            }
        }
        else {
            push @$chain, [$value];
        }
    }
    elsif ( $flag eq '-s' ) {
        push @$chain, $value;
    }
    else {
        die "invalid option: $flag\nType \"crun -h\" for help.\n";
    }
}

die "no commands added.\n" if @$chain == 0;

for my $cmds (@$chain) {
    if ( ref $cmds eq ref [] ) {    # concurrent commands
        my $runner = Parallel::Runner->new($threads);
        for my $cmd (@$cmds) {
            $runner->run(
                sub {
                    system($cmd) == 0
                        or die "failed run: $cmd\n";
                }
            );
        }
        $runner->finish;
    }
    else {                          # sequential command
        system($cmds) == 0
            or die "failed run: $cmds\n";
    }
}
